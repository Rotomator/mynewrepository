
$mkdir node-demo
$cd node-demo
$npm init
$npm install express --save
$touch app.js


-----------------------------------------
var express = require("express");
var app = express();
var port = 3000;
 
app.get("/", (req, res) => {

 res.send("Hello World");
});
 
app.listen(port, () => {

 console.log("Server listening on port " + port);

});

-----------------------------------------


--test/run

$node app.js

http://localhost:3000


touch index.html


<!DOCTYPE html>
<html>
 <head>
 <title>Intro to Node and MongoDB</title>
 </head>
 
 <body>
 <h1>Into to Node and MongoDB</h1>
 <form method="post" action="/addname">
 <label>Enter Your Name</label><br>
 <input type="text" name="firstName" placeholder="Enter first name..." required>
 <input type="text" name="lastName" placeholder="Enter last name..." required>
 <input type="submit" value="Add Name">
 </form>
 </body>
</html>


app.use



app.use("/", (req, res) => {
 res.sendFile(__dirname + "/index.html");
});





node app.js




npm install mongoose --save





var mongoose = require("mongoose");
mongoose.Promise = global.Promise;mongoose.connect("mongodb://localhost:27017/node-demo");






var nameSchema = new mongoose.Schema({
 firstName: String,
 lastNameName: String
});





var User = mongoose.model("User", nameSchema);



app.post("/addname", (req, res) => {
 var myData = new User(req.body);
 myData.save()
 .then(item => {
 res.send("item saved to database");
 })
 .catch(err => {
 res.status(400).send("unable to save to database");
 });
});



====================================
server.js

var express = require('express');
var cors = require('cors');
var mongoose = require('mongoose');
var Schema = mongoose.Schema;

var app = express();

var schemaName = new Schema({
	request: String,
	time: Number
}, {
	collection: 'collectionName'
});

var Model = mongoose.model('Model', schemaName);
mongoose.connect('mongodb://localhost:27017/dbName');

app.get('/save/:query', cors(), function(req, res) {
	var query = req.params.query;

	var savedata = new Model({
		'request': query,
		'time': Math.floor(Date.now() / 1000) // Time of save the data in unix timestamp format
	}).save(function(err, result) {
		if (err) throw err;

		if(result) {
			res.json(result)
		}
	})
})

app.get('/find/:query', cors(), function(req, res) {
	var query = req.params.query;

	Model.find({
		'request': query
	}, function(err, result) {
		if (err) throw err;
		if (result) {
			res.json(result)
		} else {
			res.send(JSON.stringify({
				error : 'Error'
			}))
		}
	})
})

var port = process.env.PORT || 8080;
app.listen(port, function() {
	console.log('Node.js listening on port ' + port);
});








Use MongoDB Driver
First, Install mongodb driver with npm install mongodb. And replace code in your server.js file with:

var express = require('express');
var cors = require('cors');
var mongo = require('mongodb');

var app = express();

mongo.connect('mongodb://localhost:27017/dbName', function(err, db) {
	db.createCollection('collectionName');
	var collectionName = db.collection('collectionName');

	var saveObject = {};

	app.get('/save/:query', cors(), function(req, res) {
		var query = req.params.query;

		saveObject = {
			"request": query,
			"time": Math.floor(Date.now() / 1000)
		}

		res.send(saveObject)

		collectionName.save(saveObject, function(err) {
			if (err) throw err;
		})
	})

	app.get('/find/:query', cors(), function(req, res) {
		var query = req.params.query;

		collectionName.find({'request': query}).toArray(function (err, result) {
			if (err) throw err;

			res.send(result);
		})

	})

})

var port = process.env.PORT || 8080;
app.listen(port, function() {
	console.log('Node.js listening on port ' + port);
})
Quickly analyze that code

MongoDB Driver

var mongo = require('mongodb');
Connect and create collection

mongo.connect('mongodb://localhost:27017/dbName', function(err, db) {
	db.createCollection('collectionName');
	var collectionName = db.collection('collectionName');

	...

	...
})
Save

saveObject = {
	"request": query,
	"time": Math.floor(Date.now() / 1000)
}

res.send(saveObject)

collectionName.save(saveObject, function(err) {
	if (err) throw err;
})
Find

collectionName.find({'request': query}).toArray(function (err, result) {
	if (err) throw err;

	res.send(result);
})
MongoDB Command Line Interface
Open another terminal and run the command mongo to open MongoDB CLI

\>mongo
MongoDB shell version: 3.2.0
connecting to: test
\>_
To see a list of existing databases, use the command show dbs

\>mongo
MongoDB shell version: 3.2.0
connecting to: test
\> show dbs
dbName  0.000GB
local   0.000GB
\>_
In this article, as the database name I used a dbName. To use this database, run the command use dbName

\>mongo
MongoDB shell version: 3.2.0
connecting to: test
\> show dbs
dbName  0.000GB
local   0.000GB
\> use dbName
switched to db dbName
\>_
Show collections with show collections

\>mongo
MongoDB shell version: 3.2.0
connecting to: test
\> show dbs
dbName  0.000GB
local   0.000GB
\> use dbName
switched to db dbName
\> show collections
collectionName
\>_
We see that in the database dbName have a collection named collectionName which contains our data. Letâ€™s read this data using the command db.collectionName.find().pretty()

\>mongo
MongoDB shell version: 3.2.0
connecting to: test
\> show dbs
dbName  0.000GB
local   0.000GB
\> use dbName
switched to db dbName
\> show collections
collectionName
\> db.collectionName.find().pretty()
{
		"_id" : ObjectId("578abe97522ad414b8eeb55a"),
		"request" : "JavaScript is Awesome",
		"time" : 1468710551
}
{
		"_id" : ObjectId("578abe9b522ad414b8eeb55b"),
		"request" : "JavaScript is Awesome",
		"time" : 1468710555
}
{
		"_id" : ObjectId("578abea0522ad414b8eeb55c"),
		"request" : "JavaScript is Awesome",
		"time" : 1468710560
}
\>_



mysql
=======
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "my sql user",
  password: "sql pwd",
  database: "mydb"
});

con.connect(function(err) {
  
if (err) throw err;

  console.log("Connected!");

  var sql = "INSERT INTO customers (name, address) VALUES ('Company Inc', 'Highway 37')";

  con.query(sql, function (err, result) {

    if (err) throw err;

    console.log("1 record inserted");

  });
});



run:
node demo_db_insert.js




multiple rows
:

var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "yourusername",
  password: "yourpassword",
  database: "mydb"
});

con.connect(function(err) {
  if (err) throw err;
  console.log("Connected!");
  var sql = "INSERT INTO customers (name, address) VALUES ?";
  var values = [
    ['John', 'Highway 71'],
    ['Peter', 'Lowstreet 4'],
    ['Amy', 'Apple st 652'],
    ['Hannah', 'Mountain 21'],
    ['Michael', 'Valley 345'],
    ['Sandy', 'Ocean blvd 2'],
    ['Betty', 'Green Grass 1'],
    ['Richard', 'Sky st 331'],
    ['Susan', 'One way 98'],
    ['Vicky', 'Yellow Garden 2'],
    ['Ben', 'Park Lane 38'],
    ['William', 'Central st 954'],
    ['Chuck', 'Main Road 989'],
    ['Viola', 'Sideway 1633']
  ];
  con.query(sql, [values], function (err, result) {
    if (err) throw err;
    console.log("Number of records inserted: " + result.affectedRows);
  });
});

